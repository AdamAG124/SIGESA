```yaml
name: CI Pipeline for SIGESA

on:
  push:
    branches:
      - DEV-QA

permissions:
  contents: write # Necesario para realizar el merge
  pull-requests: write # Necesario para crear y fusionar PRs

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Clona el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # Configura Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ajusta según la versión de Node.js que uses

      # Instala dependencias
      - name: Install dependencies
        run: npm install

      # Ejecuta pruebas de Jest
      - name: Run Jest tests
        run: npm test
        env:
          CI: true # Habilita el modo CI para Jest

      # Guarda los resultados de las pruebas
      - name: Archive test results
        if: always() # Ejecuta incluso si las pruebas fallan
        run: |
          mkdir -p test-results
          npm test -- --json --outputFile=test-results/jest-results.json
        continue-on-error: true

      # Sube los resultados como artefacto
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-test-results
          path: test-results/jest-results.json

  merge-to-main:
    runs-on: ubuntu-latest
    needs: test # Depende de que el trabajo 'test' sea exitoso
    if: github.event_name == 'push' && github.ref == 'refs/heads/DEV-QA' # Solo para push en DEV-QA

    steps:
      # Clona el repositorio con historial completo
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para trabajar con el historial de git

      # Configura git
      - name: Set up git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Cambia a la rama main y hace merge de DEV-QA
      - name: Merge DEV-QA to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout main
          git merge origin/DEV-QA --no-ff --message "Auto-merge DEV-QA to main after successful tests"
          git push origin main
        continue-on-error: true # Continúa incluso si hay conflictos

      # Crea un PR si el merge falla (por ejemplo, por conflictos)
      - name: Create Pull Request
        if: failure() # Ejecuta solo si el merge falla
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-merge DEV-QA to main"
          title: "Auto-merge DEV-QA to main after successful tests"
          body: "This PR was automatically created to merge DEV-QA into main after successful CI tests. Please resolve any conflicts."
          branch: DEV-QA
          base: main
```